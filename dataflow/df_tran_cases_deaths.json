{
	"name": "df_tran_cases_deaths",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "df_raw_cases_deaths",
						"type": "DatasetReference"
					},
					"name": "CasesAndDeathSource"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "filterEurOnly"
				},
				{
					"name": "selectOnlyRequiredField"
				},
				{
					"name": "pivotCounts"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as integer,",
				"          indicator as string,",
				"          daily_count as short,",
				"          date as date,",
				"          rate_14_day as double,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CasesAndDeathSource",
				"CasesAndDeathSource filter(continent == 'Europe' && not(isNull(country_code))) ~> filterEurOnly",
				"filterEurOnly select(mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          indicator,",
				"          cases_count = daily_count,",
				"          date,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectOnlyRequiredField",
				"selectOnlyRequiredField pivot(groupBy(country,",
				"          country_code,",
				"          population,",
				"          source,",
				"          date,",
				"          country_special = country + country_code),",
				"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
				"     count = sum(cases_count),",
				"     columnNaming: '$N_$V',",
				"     lateral: true) ~> pivotCounts"
			]
		}
	}
}